{"_id": "09c8782d9f4027712e65b95424adba79", "_meta": {"ETag": "d75ba5eb2927c543c1376cebed3ee3adf823269888222301714e4477d369b437", "github_username": "newgene", "slug": "myvariant", "timestamp": "2020-03-06T23:34:01.517674", "uptime_status": "good", "uptime_ts": "2019-12-02T23:26:34.290710", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/openapi_full.yml"}, "_score": 0.8, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned variant object. If \"true\" or \"1\", all fields will be collapsed into a single level deep structure (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated fields to limit the fields returned from the matching variant hits. The supported field names can be found from any variant object (e.g. http://myvariant.info/v1/variant/rs12190874). Note that it supports dot notation as well, e.g., you can pass \"dbsnp.rsid\". If \"fields=all\", all available fields will be returned. Default: \"all\".", "in": "query", "name": "fields", "schema": {"type": "string"}}, "from": {"description": "the number of matching variant hits to skip, starting from 0. Combining with \"size\" parameter, this can be useful for paging. Default: 0.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "size": {"description": "the maximum number of matching variant hits to return (with a cap of 1000 at the moment). Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated fields to sort on. Prefix with \"-\" for descending order, otherwise in ascending order. Default: sort by matching scores in decending order.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Variant"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Variant"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "Variant": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"variantAssociatedWithCondition": [{"inputSeparator": ",", "inputs": [{"id": "dbsnp", "semantic": "SequenceVariant"}], "method": "post", "outputs": [{"id": "omim", "semantic": "DiseaseOrPhenotypicFeature"}], "parameters": {"dotfield": false, "fields": "clinvar.rcv"}, "path": "/query", "requestBody": {"body": {"q": "{input1}", "scopes": "dbsnp.rsid"}, "header": "application/x-www-form-urlencoded"}, "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "dbsnp", "semantic": "SequenceVariant"}], "method": "post", "outputs": [{"id": "orphanet", "semantic": "DiseaseOrPhenotypicFeature"}], "parameters": {"dotfield": false, "fields": "clinvar.rcv"}, "path": "/query", "requestBody": {"body": {"q": "{input1}", "scopes": "dbsnp.rsid"}, "header": "application/x-www-form-urlencoded"}, "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "dbsnp", "semantic": "SequenceVariant"}], "method": "post", "outputs": [{"id": "name", "semantic": "DiseaseOrPhenotypicFeature"}], "parameters": {"dotfield": false, "fields": "uniprot.humsavar.disease_name"}, "path": "/query", "requestBody": {"body": {"q": "{input1}", "scopes": "dbsnp.rsid"}, "header": "application/x-www-form-urlencoded"}, "supportBatch": true}], "variantAssociatedWithGene": {"inputSeparator": ",", "inputs": [{"id": "dbsnp", "semantic": "SequenceVariant"}], "method": "post", "outputs": [{"id": "entrez", "semantic": "Gene"}], "parameters": {"dotfield": false, "fields": "dbsnp.gene.geneid"}, "path": "/query", "requestBody": {"body": {"q": "{input1}", "scopes": "dbsnp.rsid"}, "header": "application/x-www-form-urlencoded"}, "supportBatch": true}}, "x-bte-response-mapping": {"query-post": {"@context": "http://schema.org", "@type": "SequenceVariant", "bts:clinvar": "clinvar.variant_id", "bts:dbsnp": "dbsnp.rsid", "bts:variantAssociatedWithCondition": [{"$input": "bts:dbsnp", "$source": "clinvar", "@type": "DiseaseOrPhenotypicFeature", "bts:clinicalsignificance": "clinvar.rcv.clinical_significance", "bts:name": "clinvar.rcv.conditions.name", "bts:omim": "clinvar.rcv.conditions.identifiers.omim"}, {"$input": "bts:dbsnp", "$source": "clinvar", "@type": "DiseaseOrPhenotypicFeature", "bts:clinicalsignificance": "clinvar.rcv.clinical_significance", "bts:name": "clinvar.rcv.conditions.name", "bts:orphanet": "clinvar.rcv.conditions.identifiers.orphanet"}, {"$input": "bts:dbsnp", "$source": "uniprot", "@type": "DiseaseOrPhenotypicFeature", "bts:name": "uniprot.humsavar.disease_name"}], "bts:variantAssociatedWithGene": {"$input": "bts:dbsnp", "$source": "dbsnp", "@type": "Gene", "bts:entrez": "dbsnp.gene.geneid"}}}}, "info": {"contact": {"email": "help@myvariant.info", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the MyVariant.info Variant Query web services. Learn more about [MyVariant.info](http://myvariant.info/)", "termsOfService": "http://myvariant.info/terms/", "title": "MyVariant.info API", "version": "1.0"}, "openapi": "3.0.0", "paths": [{"path": "/metadata", "pathitem": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "MyVariant.info metadata object"}}, "summary": "Get metadata about the data available from MyVariant.info.", "tags": ["metadata"]}}}, {"path": "/metadata/fields", "pathitem": {"get": {"parameters": [{"description": "Pass a search term to filter the available fields, e.g. \"search=clinvar\".", "in": "query", "name": "search", "schema": {"type": "string"}}, {"description": "Pass a prefix string to filter the available fields, e.g. \"prefix=refseq\".", "in": "query", "name": "prefix", "schema": {"type": "string"}}, {"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "MyVariant.info metadata fields object"}}, "summary": "Get metadata about the data fields available from MyVariant.info.", "tags": ["metadata"]}}}, {"path": "/query", "pathitem": {"get": {"parameters": [{"description": "Query string. Examples \"rs752396467\", \"possibly_damaging\", \"CDK7\". The detailed query syntax can be found from our [docs](http://docs.myvariant.info/en/latest/doc/variant_query_service.html).", "example": "CDK7", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}, "x-requestTemplate": [{"template": "cadd.gene.genename:{{input}} OR cgi.gene:{{input}} OR clinvar.gene.symbol:{{input}} OR dbnsfp.genename:{{input}} OR dbsnp.gene.symbol:{{input}} OR docm.genename:{{input}} OR emv.gene:{{input}} OR evs.gene.symbol:{{input}} OR snpeff.ann.genename:{{input}}", "valueType": "http://identifiers.org/hgnc.symbol/"}, {"template": "clinvar.rsid:{{input}} OR dbnsfp.rsid:{{input}} OR dbsnp.rsid:{{input}} OR evs.rsid:{{input}}", "valueType": "http://identifiers.org/dbsnp/"}, {"template": "dbnsfp.ensembl.geneid:{{input}} OR cadd.gene.gene_id:{{input}}", "valueType": "http://identifiers.org/ensembl.gene/"}, {"template": "dbnsfp.ensembl.transcriptid:{{input}} OR cadd.gene.feature_id:{{input}}", "valueType": "http://identifiers.org/ensembl.transcript"}, {"template": "dbnsfp.ensembl.proteinid:{{input}}", "valueType": "http://identifiers.org/ensembl.protein/"}, {"template": "cadd.gene.ccds_id:{{input}}", "valueType": "http://identifiers.org/ccds/"}, {"template": "dbnsfp.uniprot.acc:{{input}}", "valueType": "http://identifiers.org/uniprot/"}, {"template": "clinvar.omim:{{input}}", "valueType": "http://identifiers.org/omim/"}, {"template": "clinvar.rcv.conditions.identifiers.efo:{{input}}", "valueType": "http://identifiers.org/efo/"}, {"template": "clinvar.rcv.conditions.identifiers.orphanet:{{input}}", "valueType": "http://identifiers.org/orphanet/"}, {"template": "clinvar.gene.id:{{input}} OR dbsnp.gene.geneid:{{input}}", "valueType": "http://identifiers.org/hgnc/"}, {"template": "civic.evidence_items.source.pubmed_id:{{input}} OR docm.pubmed_id:{{input}} OR gwassnps.pubmed:{{input}}", "valueType": "http://identifiers.org/pubmed/"}, {"template": "clinvar.rcv.clinical_significance:{{input}}", "valueType": "http://identifiers.org/clinicalsignificance/"}, {"template": "civic.evidence_items.drugs.name:{{input}}", "valueType": "http://biothings.io/terms/drugname/"}], "x-valueType": ["http://identifiers.org/hgnc.symbol/", "http://identifiers.org/dbsnp/", "http://identifiers.org/ensembl.gene/", "http://identifiers.org/ensembl.transcript/", "http://identifiers.org/ensembl.protein/", "http://identifiers.org/ccds/", "http://identifiers.org/uniprot/", "http://identifiers.org/clinvar/", "http://identifiers.org/omim/", "http://identifiers.org/efo/", "http://identifiers.org/orphanet/", "http://identifiers.org/hgnc/", "http://identifiers.org/pubmed/", "http://identifiers.org/refseq/", "http://identifiers.org/clinicalsignificance/", "http://biothings.io/terms/drugname/"]}, {"$ref": "#/components/parameters/fields", "in": "query", "name": "fields"}, {"$ref": "#/components/parameters/size", "in": "query", "name": "size"}, {"$ref": "#/components/parameters/from", "in": "query", "name": "from"}, {"$ref": "#/components/parameters/sort", "in": "query", "name": "sort"}, {"description": "a single field or comma-separated fields to return facets, for example, \"facets=clinvar.gene.id\", \"facets=clinvar.gene.id,dbnsfp.uniprot.acc\".", "in": "query", "name": "facets", "schema": {"type": "string"}}, {"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}, {"$ref": "#/components/parameters/dotfield", "in": "query", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "in": "query", "name": "email"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response object with \"hits\" property", "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_query_1.1.json", "x-responseValueType": [{"path": "hits._id", "valueType": "http://identifiers.org/hgvs/"}]}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make variant query and return matching variant list. Support JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/fields", "in": "query", "name": "fields"}, {"$ref": "#/components/parameters/dotfield", "in": "query", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "in": "query", "name": "email"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard, e.g., \"q=rs58991260,rs2500\" or \"q=rs58991260+rs2500\"", "type": "string"}, "scopes": {"description": "Specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=dbsnp.rsid\". The available \"fields\" that can be passed to \"scopes\" parameter are listed [here](http://docs.myvariant.info/en/latest/doc/data.html#available-fields). Default: \"scopes=_id\" (HGVS id).", "type": "string"}}, "required": ["q"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with \"hits\" property", "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_query_1.1.json", "x-bte-response-mapping": {"$ref": "#/components/x-bte-response-mapping/query-post"}, "x-responseValueType": [{"path": "hits._id", "valueType": "http://identifiers.org/hgvs/"}]}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make variant batch query and return matching variant hits", "tags": ["query"], "x-bte-kgs-operations": [{"variantAssociatedWithGene": {"$ref": "#/components/x-bte-kgs-operations/variantAssociatedWithGene"}}, {"variantAssociatedWithCondition": {"$ref": "#/components/x-bte-kgs-operations/variantAssociatedWithCondition"}}]}}}, {"path": "/variant", "pathitem": {"post": {"parameters": [{"$ref": "#/components/parameters/fields", "in": "query", "name": "fields"}, {"$ref": "#/components/parameters/dotfield", "in": "query", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "in": "query", "name": "email"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple variant ids seperated by comma, e.g., \"ids=chr6:g.152708291G>A,chr1:g.35367G>A\" or \"ids=rs5882,rs12190874\". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Variant"}, "type": "array"}}}, "description": "a list of matching variant objects", "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_variant_1.1.json", "x-responseValueType": [{"path": "_id", "valueType": "http://identifiers.org/hgvs/"}]}}, "summary": "For a list of variant ids, return the matching variant objects", "tags": ["variant"]}}}, {"path": "/variant/{variantid}", "pathitem": {"get": {"parameters": [{"description": "HGVS or rsid, e.g., chr6:g.152708291G>A, rs12190874", "example": "chr6:g.152708291G>A", "in": "path", "name": "variantid", "required": true, "schema": {"type": "string"}, "x-requestTemplate": [{"template": "/variant/{{input}}", "valueType": "http://identifiers.org/hgvs/"}, {"template": "/variant/{{input}}", "valueType": "http://identifiers.org/dbsnp/"}], "x-valueType": ["http://identifiers.org/hgvs/", "http://identifiers.org/dbsnp/"]}, {"$ref": "#/components/parameters/fields", "in": "query", "name": "fields"}, {"$ref": "#/components/parameters/dotfield", "in": "query", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}, {"$ref": "#/components/parameters/email", "in": "query", "name": "email"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Variant"}}}, "description": "A matching variant object", "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_variant_1.1.json", "x-responseValueType": [{"path": "_id", "valueType": "http://identifiers.org/hgvs/"}]}, "404": {"description": "A response indicating an unknown variant id"}}, "summary": "Retrieve variant annotation object based on HGVS or rsid, support JSONP and CORS as well.", "tags": ["variant"]}}}], "servers": [{"description": "Encrypted Production server", "url": "https://myvariant.info/v1"}, {"description": "Production server", "url": "http://myvariant.info/v1"}], "tags": [{"name": "variant"}, {"name": "query"}, {"name": "metadata"}, {"name": "translator"}], "~raw": "H4sIAOndYl4C_-0ba3PbNvKvYNR-iKcyJTnvzPimadLmetfGaZxJP8QZD0RCEhqSoAFSturxf7_dBcCHRFGU67aZXL_YEoBd7HuxC-h6oDKR8kwOnrHB_WAcjAdDNpDpTMHA9SBUac7DnD6LhMsYly1EnH2brJZcS57mAS0GoJQnAqdfLIo0FpL9WuDo1aGMCCjPM_NsNJrLfFFMg1Alo1RczkUq7CqtYoLWwmQqNXIaCxaJpYiBPj24gTWRMKGWWS5VigtfqrBIBJCHA0zNWL4Q7OfV-xpVzH1hvxRCr9ilmDIj9FKGwgTsJ8F1yhKlBeNTVeTsQxP44z0kGShucjo6QHpzoRNzMju12Dx_m4tp3YggZG4ZXCPx-ZsfcXoptHGMTUAHyC-SCqMw9OF6nfnv01CvslxE7I1WURGSDCwAYit0XJf5GlHLCeLfwLkLUzuij8gbnzsyvQ24ZXYfP3iBWmgOJSLnEc95czTXPDUxz5W2-DOeLwzZ4KgEwG9zYS0z4xog81JYX2sxQzxfjcDMwJrASsyoWjQKeRxPefjJmnpFWs2IyyVEgDNKYYk4Go_p_5r81hTrKWVq-psAF7ohnRZJwmEnWP5K5NUaa4FowfbrElyNowvMtErWrDoY1EReSfAjbVAKaDSTIo5Mp5zWDYAbwzgon-twwdB0Wa7YTMbwkWirkUXIh0wE84CdDSzIcRjLFDR_Ngg6JGvX4ogJFxBTiLJ8ldnJXMt0TrLaRl4GypVXzK7sS6AFOoa_Rlx002eX9qHv8zIzy_FtrM1B_gGjs3ztYWo2IFtpBuz7K55ksTCgKG0ePzy6__TRg0ePz2BL0JwymAxW5xFP-ByW2-EXL_8LCwL2DpkAamQMsfDCYl1BUrhiIU_ZFHhRRRpZjlSh2YdIhaYM7fglWAtqIh1B6BEmx9mRmzon1OcuewSLPIkPSCTCkk55D0jqUPXFgDR8UUgtMCPmuhDdRmbzIkAAMe8EbANkWWnm1TcwoSgKMI_SH9zt2fW1TLMiv7lhJ29ZOJc0szZqXdUCmlUyVXFzQTRNzSzbgjOamjTrgFVhsgVSJMsWasTSbMcGW4nZLOBp2oKTciePC_HOCc9pVkbgjRIsW5tA6floMU9Dh31kk01Dhk4akIOjVjG0TaAINseRleZoXxIJYwtxjgQBgSGZxiSD9U2bNnB-m93r6HcTQRnaOvRWUmaC54X-Y9RU--wkKdMqFzL9I7s5FG0GUnIVhpG5FUsIuF2wRSpx94CH4f6oHXCHYatEJvvjRagubwmXcI5PI4lR3QR1aDFTt1ADRN9b7aZ0tuCpyG_BoYPs2Je03u79pcfdxh4wIrVtKyHDBGKJy0NwHpgzgYHUBWknK6aJiM43iMFwu2VufgmnpjQzbn5_Mi3cLr3AZwlnmXMj5ykAQ-4NbxGkPZo6lr4iinQxN0G_5DCVKl9AigUr8iUagiPwyJ7Erg7rcB96ZZXhrsg-7Bl8h3uExT6ry7A23BGchrsjzLBTeWAPXUtsPBl2B4BhD2cd7vCq4U5z3r7C1gi7ON0002E_8_rYq3Rwxdv206Rb0AuZkb-LroIMp_tRBafoLppwuh9FSuddFOF0WwkIxSnI1Zd3TGkG-BN-aAQix3aIq2WgLNQCTh8pm_FQ5FAIzmCxO6xj_WCHj9eCvK0t2ueGm5m6u5C0aP7yQrIPwkjlJKgOhOWSXghtb3A7NjvfUeRioxGQ0meeZTF4FSp99JshzV_XZdhKjJ03I6os3wpTxFgEt_QNn7sy0dPhKmZ2KfMFKH8hc3M2YKDiTOh8ZZuT_zk9ef3TyxdI41Ve76xpfhnYjmYBtaFjgpqbr188f3d6-I6ncwGaFqOqp3XIMwll3VyCDaxGQDNIcL2zhmzH0Xlod6xmXR06CSYBScaViJaT9_WUdU1dM6IVOArgYND_YLLEgyoGqsGDu1bP91or3a2eUjESDnu4TzpnUMvLxOokXqEvJzzPfcW_0ez4mX8SzEnMaZunkY8IABpieC5XxKCJgJ0WWQZxh6Gu39D6FydvTxk37FLEcbP_YbclCWXK3K4Jeach_u91aOpQfKeiVaetXB1eXl4eou4OCx3D0U1F1AhpGI_zO-nCw0VbBywB45EQx51qKcMySAHCpoDpymYFdg9StGLG6fVs8A34NWSBS3AIwUwG4flgyKZFzlIF3h9HIdeR7RhiFrg41ubhk6dPJ0ePxkNtjh6Oxxa-OfWNnyID2ezgmBAYMm1snGYilLMVA-EjWrqJcOnrXpXQPDcHaInYsnPt2TOHGVOWJ9mOHFetCd8hq1p7Z86sgJV8wXPfJcugSoDNIG1WeFlpDowDaeglsOTDQmixRwMN24TUL_uqJOLQknAQsJdixkGZzyraz5Fodu_fr96fMhnZHltLzqw30sAdsQ_phv_85PLm5PRdVwT7pS29mH_yy3p-IdzTXJT4DxNQDmp4qx7a19v28yFF4psvJGtNMUn1yF0o_LbUVAr309wcKgqN2DaxmnPAz41RocQo8yuY2Cu8it0h-Say0XY89lzbOv_C93DuYrMK2c2Nu4vwV4-UTf5Jzn9icpaR6UzP3kZhXUt6rtIWzB-HC_3o2TyYPDx6PH5y9HTy6l_PhzA2gbH7D-8_egzfffbF5Zh_nxxBWp4cTZ6Onzx-gJnutYK8brNaoTVwGeOdP-RX-J-jc2H6pNYQkVRkmO8m4_EY3OpKJkUypBXgyVgNxDEmRpVIdNl-eQgFcneZiPpau2PT--qqvaSQa81X7ZGKUyLH9xIbscRlqs8tJfn_eyWl29Q7a_H4B7C2Slo1Yx76aIzW0iXFMij7mNQMUaNr90FGN_tcntLhCIjDE573ojb_YZV7rF1VtqyuwgmJsBZNSiL_pAvMShz7t9CXbVcqt0for-D2agEvTY_e79_Q9rvztHPnbajPp2tUBtH2w90WJ_-_jZR0xn7Qlvy3HoSL9FOqLtNaHN04AL8VEDfEsjo48DRV_n2fbdJNOZap8L0ZA80evZtaLMb9K2PYDL3XlT23sLpSBZXPmX2XdFYubpTOcMRI8OzBHXG4KOjjQTv7xpX3thCHxqFVTCnKFh7-iaTNXSDFpi0H7McZ8IBB3R-0JthbAHJ8V8KfiUIVxzxDRcgU2Cub8jE-12SREBm-7ClCvP3HJkzMUkG9g6oUtohaIIeswDHmeWOlBcBO9sJlRWw4lOVGB1UzYcZjI4I-Ya9dxlOlYsFTK2T_6nVDwiAutABsjYC_FjHXDN3coJzxpZF_aTrEMygeqAvN54JggBU4SuP9JYCgc9AmYMbKHl8BwPZlcrIgDeZAPBcGMYBuZqABdYknWOoqAM5gZxjdbU-1F4Mbh8bt9yyxhCOytTM7VhoYPbpqPSNRy4A6U85zPUaGNJuWt1s8Xa0ZLLtHb_u2vUwtDwHVIeigXiIAzW5vg8ZW2ZkLGv5g1fDys0Gzt0YuY9k-Bjv3_rL-DLE0eC-aRueLAIPdSb-HAvECrkV95C9FMgVjajv3ozbIvT5J8D-Tc01Bm-Q-DtgLlUxliiOuhYUXhvUYh2WTLJUGTjArYrpvy-jBXo3ZcbDr-rCdSYgzYo7PwClj4H3lFi5dIdeHW3eGv0dMgYHzDJdTOcitPScK35fX25STTgb8PetOBvB6cwsD2_0MoSDzBeyNfQDrlHEImkBZIy4BGRc4VTpCpSjApy8lZWKw6sZsjSfCC0V5KSgTKsjhCBSJJtCuK9sdFnpTztsgU--qtbQXIBBgvNtWWZgihOhqtkduP-hfxA5da7bWv22W2eCIJ7OO_lBLxb1B9DlJjz7atEuWHSue1zsI1jyJpOrpbJtHr_PwsaXK93xtlyQ1Ce-mpQAj4GN7c5kr9andIWgy5_F2d2nR4_t6j29NATLaKs1GswYXfmxHD9s_enCu9LllGtGBhLxtVEKseCeIOu8N_tZF2A-SdG3J70FLi4e07Lu-yjYkOtrwtdY6fv02bJY5kHmt0WB9gFx863c4xbI_DYVXFcxNc_OM8qd99-gTqZ9y7y3qb8t8QVMt6m5dl7u_cr8rQhAwbS1-r_asvdrDJV9Tj4CiR0kfDts3dyUYSXQrBfWm9ocaHS8h_ELJcqLfLAScMFaZDH-wz2I9dfgmqu8zR1zqwMpyoR2MpmtyXX-u1OsBXz_peLWRfe3DuHvNtecbzy9HAJ4D_6BoUSSGIz2RBT33POwmwaFo-vPGzc-uix_fERiV2R2OdwtFP9-jCEBZl87M3-FhoeoBEoGn9tCiyIOHA_rdVqOYLuuLdkeslbNUwd20XF9M_Qd8GDCw7b3JzaB-z16PLIhiITicXSgO7rzvuPG8uMar_eliKXEDgQ4MMmyLb9SlUkW-Duyizxq0vSSjCN8nnvx1mqn5xJerEx9I67Ad_npjm7f_KOFulVAL6J-rInaG5i9TNZ67_mrBZur_ALhnbOtLPgAA"}